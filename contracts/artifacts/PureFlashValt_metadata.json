{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "profitpool",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "profitrate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "loadfee",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "balance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "minFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dealer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "pureLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanfee",
						"type": "uint256"
					}
				],
				"name": "setLoanFee",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "profitpool",
						"type": "address"
					}
				],
				"name": "setPool",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "profitrate",
						"type": "uint256"
					}
				],
				"name": "setProfitRate",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sharePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "valtInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "shares",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"sharePrice()": {
					"details": "获取每份基础资产对应的份额"
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/PureFlashValt.sol": "PureFlashValt"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/@interface/IERC20Info.sol": {
			"keccak256": "0x201c98cb99a60fd570567125db847f0f15b2d663ad1fbdd44ae53ab665b3c6bc",
			"license": "Unlicense",
			"urls": [
				"bzz-raw://19ce75c2dec1c015a1c25537b61c8ff433b4ae819a78851417164f3a69e0cee3",
				"dweb:/ipfs/QmNenHJTyHcz7c26zpsaizVfBqaJDtfKaydAFCkYucMbTh"
			]
		},
		"localhost/contracts/@interface/IPureFlash.sol": {
			"keccak256": "0xba7fe9a3a614911847643392816d7eb048e4166d9b7b58747af3c651eea6adb5",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://eea97949ddbca5246339f2746fb4fbb9398cfe30b99e8a02c8cfe553c518f356",
				"dweb:/ipfs/QmZ1KpPcSVqnAhbWwEvr9CnfwEhoKhEQzuWMhk34KNczMs"
			]
		},
		"localhost/contracts/@interface/IPureValt.sol": {
			"keccak256": "0x2831734a2064644e3aba2f8536262219638bbeab49f39a5b17da5ac84ea4f5b6",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://40a37a2c36575c49f872dc78661d19088200a48648b15264fa55a30edbadac8e",
				"dweb:/ipfs/QmXADGtujMtS5Y8VCoGhHJUVjhZxA4CeTZ4tUrAv1xF23f"
			]
		},
		"localhost/contracts/@libs/ERC20Detailed.sol": {
			"keccak256": "0x7c46afcd0ab736216ba457da2bd880eef2fc2de9300623164c48a24fade8c980",
			"license": "Unlicense",
			"urls": [
				"bzz-raw://1c4886822c73acc09971cdd294ea0ccc77492b9803295f1c5bf255bd3b853717",
				"dweb:/ipfs/QmPMKJGhKpyJppR52rWKPvdM4qQ1fwUcGcRcoxyBT5rG1L"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/GSN/Context.sol": {
			"keccak256": "0xd12c329e1ca32581411b6bfec2680e1bb7ecbb2eeeece8da51eb5c3f25b3ed67",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a1ef168dcfc49106a5c3443acf00b2d1f3ac7935862e4ea58b92e3f0e3261e5",
				"dweb:/ipfs/QmaaKMG238m676BK9Z8p4tm6PXwD2SjTv7nmEVVrqhe1f4"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0xe173bd90ece9eda06ed31c51dd8a04f11f7c9c2b12ac9e525fb4a24a90230ec5",
			"license": "MIT",
			"urls": [
				"bzz-raw://29f3322bd650a8a8745694695e753c8debe38ed6567a6ee56ca41b35639e309c",
				"dweb:/ipfs/QmcLdW2xWLLQksdVWw4c6aqSmpzjr2d5SnKLkvVgUkKcpb"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x4dfb4f10372152304ce58532ed539fc55ec6e38603e87bbcb3436eaf8f516101",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7dea2270f5a1710e0fcf27cb71da24d1e9d385ef3b660bf64deca4a9a0e6700",
				"dweb:/ipfs/QmY2K45VE4ygv6E3tYCTVeE84smWMn3pAQhGXjpYFvfefi"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x32331d18e36cb23f5d8a09bd90f79185cf3ded7891c26d4ded17b2fe37acbb24",
			"license": "MIT",
			"urls": [
				"bzz-raw://e928037aa26fa275fe058971487dceaf29c8d818edba152c7401b8dde53749e9",
				"dweb:/ipfs/QmUAJ7jE2B2zA2Lyh3aZxUbXa7tjN4dcaAd6uYcoZXjZ7j"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0x33494889e7ea7aba57a3372f604a3c6a7502f1155f3ec1b1030552722c4318c7",
			"license": "MIT",
			"urls": [
				"bzz-raw://e77f097dde396d7a7a27852d4a813ce0c8414a2bfe51d8067b3934b2aa600285",
				"dweb:/ipfs/QmVh5mx99Sfv942NTchwJfn8PfwyaS2CdCF1Y3ovNxXYKy"
			]
		},
		"localhost/contracts/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2491847d10b07d43ca36716ebc508da0bdc8e3236717dfedb793f22d808a5515",
			"license": "MIT",
			"urls": [
				"bzz-raw://b61cd2e07b10df989872faf608e179cea60918cb67fe6c25acebeea0704e4d14",
				"dweb:/ipfs/QmVyAmQs9BrUnFKccJxDCgx2rHScUZhEsZKj1HtADqN6Pq"
			]
		},
		"localhost/contracts/PureFlashValt.sol": {
			"keccak256": "0x40b8226c6dfad102eeeeaa705c52d46a574f97aaac0be3079db48180e80129fe",
			"license": "MIT",
			"urls": [
				"bzz-raw://5e4075b3b54a503ad9b9a62a0e4ce9f479900353b8a2e2a3a944e22f36854c2a",
				"dweb:/ipfs/QmWSqWjvoXYDwHNGhCE9Eo8uzphZbe4A217SdpXCNrHpPf"
			]
		}
	},
	"version": 1
}